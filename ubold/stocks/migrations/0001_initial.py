# Generated by Django 3.1.8 on 2021-09-29 05:43

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AfAndSub',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('corp_code', models.CharField(help_text='DART 고유번호', max_length=9)),
                ('term_name', models.CharField(help_text='기간명', max_length=10)),
                ('relative_stock_code', models.CharField(help_text='대상 회사 종목 코드', max_length=15)),
                ('account_name', models.CharField(help_text='계정명', max_length=50)),
                ('value', models.DecimalField(decimal_places=2, help_text='값', max_digits=21, null=True)),
            ],
            options={
                'db_table': 'af_and_sub',
            },
        ),
        migrations.CreateModel(
            name='BasicInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('code', models.CharField(help_text='종목코드', max_length=7, unique=True)),
                ('name', models.CharField(help_text='종목명', max_length=20)),
                ('corp_code', models.CharField(blank=True, default=' ', help_text='DART 고유번호', max_length=9)),
                ('is_recommend', models.BooleanField(default=False, help_text='추천 종목')),
                ('is_favorite', models.BooleanField(default=False, help_text='인기 종목')),
            ],
            options={
                'db_table': 'stocks_basic_info',
                'ordering': ('code',),
            },
        ),
        migrations.CreateModel(
            name='BoardMembers',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('corp_code', models.CharField(help_text='DART 고유번호', max_length=9)),
                ('term_name', models.CharField(help_text='기간명', max_length=10)),
                ('member_name', models.CharField(help_text='이사회 멤버 이름', max_length=20)),
                ('member_job', models.CharField(help_text='업무', max_length=50, null=True)),
                ('member_birth_date', models.CharField(help_text='생년월일', max_length=20, null=True)),
                ('member_sex', models.CharField(help_text='성별', max_length=1, null=True)),
                ('member_status', models.CharField(help_text='상태', max_length=20, null=True)),
                ('member_office_term', models.CharField(help_text='임기 기간', max_length=40, null=True)),
                ('member_office_end', models.CharField(help_text='임기 종료일', max_length=20, null=True)),
            ],
            options={
                'db_table': 'board_members',
            },
        ),
        migrations.CreateModel(
            name='ConnectionWords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('corp_code', models.CharField(help_text='DART 고유번호', max_length=9)),
                ('term_type', models.CharField(choices=[('d', '일'), ('w', '주'), ('m', '월'), ('q', '분기'), ('h', '반기')], default='d', help_text='집계 기간 단위 : d(일), w(주), m(월), q(분기), h(반기)', max_length=10)),
                ('term_start', models.CharField(help_text='기간 시작일', max_length=10)),
                ('term_end', models.CharField(help_text='기간 종료일', max_length=10)),
                ('word', models.CharField(help_text='단어', max_length=50)),
                ('word_count', models.IntegerField(help_text='단어 수')),
                ('rank', models.IntegerField(help_text='단어 수 순위')),
                ('category1', models.CharField(help_text='카테고리(대분류)', max_length=100)),
                ('category2', models.CharField(help_text='카테고리(소분류)', max_length=100)),
            ],
            options={
                'db_table': 'stock_connection_words',
            },
        ),
        migrations.CreateModel(
            name='Consensus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('corp_code', models.CharField(help_text='DART 고유번호', max_length=9)),
                ('estimate_date', models.DateField(help_text='추정일자')),
                ('target_year', models.CharField(help_text='예측 년도', max_length=4)),
                ('fin_corp', models.CharField(help_text='증권사', max_length=20)),
                ('com_sep', models.CharField(help_text='연결/개별', max_length=3)),
                ('account_name', models.CharField(help_text='계정명', max_length=100)),
                ('lastest_estimate', models.DecimalField(decimal_places=2, help_text='최신 추정치', max_digits=21, null=True)),
                ('before_estimate', models.DecimalField(decimal_places=2, help_text='직전 추정치', max_digits=21, null=True)),
            ],
            options={
                'db_table': 'consensus',
            },
        ),
        migrations.CreateModel(
            name='DetailInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('time', models.BigIntegerField(help_text='시간 (hhmm)')),
                ('updown_signal', models.IntegerField(choices=[(1, '상한'), (2, '상승'), (3, '보합'), (4, '하한'), (5, '하락')], help_text='대비부호')),
                ('updown_price', models.DecimalField(decimal_places=2, help_text='전일대비', max_digits=19)),
                ('current_price', models.DecimalField(decimal_places=2, help_text='현재가', max_digits=19)),
                ('open_price', models.DecimalField(decimal_places=2, help_text='시가', max_digits=19)),
                ('high_price', models.DecimalField(decimal_places=2, help_text='고가', max_digits=19)),
                ('low_price', models.DecimalField(decimal_places=2, help_text='저가', max_digits=19)),
                ('ask_quote', models.DecimalField(decimal_places=2, help_text='매도호가', max_digits=19)),
                ('bid_quote', models.DecimalField(decimal_places=2, help_text='매수호가', max_digits=19)),
                ('transaction_volume', models.BigIntegerField(help_text='거래량')),
                ('transaction_price', models.DecimalField(decimal_places=2, help_text='거래대금', max_digits=19)),
                ('market_state', models.IntegerField(choices=[(1, '장전'), (2, '동시호가'), (3, '장중'), (4, '빈값')], default=4, help_text='장구분. 1: 장전, 2: 동시호가, 3: 장중, 4: 빈값')),
                ('total_ask_quote_redundancy', models.BigIntegerField(help_text='총매도호가잔량')),
                ('total_bid_quote_redundancy', models.BigIntegerField(help_text='총매수호가잔량')),
                ('first_ask_quote_redundancy', models.BigIntegerField(help_text='최우선매도호가잔량')),
                ('first_bid_quote_redundancy', models.BigIntegerField(help_text='최우선매수호가잔량')),
                ('total_listing_volume', models.BigIntegerField(help_text='총상장주식수')),
                ('foreigner_holding_ration', models.FloatField(help_text='회국인보유비율')),
                ('previous_volume', models.BigIntegerField(help_text='전일거래량')),
                ('previous_close_price', models.DecimalField(decimal_places=2, help_text='전일종가', max_digits=19)),
                ('volume_power', models.FloatField(help_text='체결강도')),
                ('volume_type', models.IntegerField(choices=[(1, '매수체결'), (2, '매도체결'), (3, '빈값')], default=3, help_text='체결구분. 1: 매수체결, 2: 매도체결, 3: 빈값')),
                ('open_interest', models.BigIntegerField(help_text='미결제약정')),
                ('expected_closing_price', models.BigIntegerField(help_text='예상체결가')),
                ('expected_closing_updown', models.BigIntegerField(help_text='예상체결가대비')),
                ('expected_closing_updown_signal', models.IntegerField(choices=[(1, '상한'), (2, '상승'), (3, '보합'), (4, '하한'), (5, '하락'), (6, '빈값')], help_text='예상체결가 대비부호')),
                ('expected_volume', models.BigIntegerField(help_text='예상체결수량')),
                ('nineteen_closing_sum', models.DecimalField(decimal_places=2, help_text='19일 종가합', max_digits=19)),
                ('upper_limit', models.DecimalField(decimal_places=2, help_text='상한가', max_digits=19)),
                ('lower_limit', models.DecimalField(decimal_places=2, help_text='하한가', max_digits=19)),
                ('sales_quantity_unit', models.PositiveSmallIntegerField(help_text='매매수량단위')),
                ('foreigner_net_sale_volume', models.BigIntegerField(help_text='외국인순매매. 단위: 주')),
                ('fiftytwoweek_high_price', models.DecimalField(decimal_places=2, help_text='52주 최고가', max_digits=19)),
                ('fiftytwoweek_low_price', models.DecimalField(decimal_places=2, help_text='52주 최저가', max_digits=19)),
                ('year_high_price', models.DecimalField(decimal_places=2, help_text='연중 최고가', max_digits=19)),
                ('year_low_price', models.DecimalField(decimal_places=2, help_text='연중 최저가', max_digits=19)),
                ('price_earning_ratio', models.FloatField(help_text='PER')),
                ('earning_per_share', models.BigIntegerField(help_text='EPS')),
                ('capital', models.BigIntegerField(help_text='자본금. 단위: 백만')),
                ('par_value', models.PositiveSmallIntegerField(help_text='액면가')),
                ('allocation_ratio', models.FloatField(help_text='배당률')),
                ('allocation_earning_ratio', models.FloatField(help_text='배당수익률')),
                ('debt_ratio', models.FloatField(help_text='부채비율')),
                ('reservation_ratio', models.FloatField(help_text='유보율')),
                ('equity_capital_ratio', models.FloatField(help_text='자기자본이익률')),
                ('sales_growth_ratio', models.FloatField(help_text='매출이익증가율')),
                ('ordinary_profit_growth_ratio', models.FloatField(help_text='경상이익증가율')),
                ('net_profit_growth_ratio', models.FloatField(help_text='순이익증가율')),
                ('sentiment_indicators', models.FloatField(help_text='투자심리')),
                ('volume_ratio', models.FloatField(help_text='VR')),
                ('fiveday_turnover_ratio', models.FloatField(help_text='5일 회전율')),
                ('fourday_closeprice_sum', models.DecimalField(decimal_places=2, help_text='4일 종가합', max_digits=19)),
                ('nineday_closeprice_sum', models.DecimalField(decimal_places=2, help_text='9일 종가합', max_digits=19)),
                ('revenue', models.BigIntegerField(help_text='매출액. 단위: 백만')),
                ('ordinary_profit', models.BigIntegerField(help_text='경상이익. 단위: 원')),
                ('net_profit', models.BigIntegerField(help_text='당기 순이익. 단위: 원')),
                ('bookvalue_per_share', models.BigIntegerField(help_text='BPS 주당 순 자산')),
                ('operating_income_growth_ratio', models.FloatField(help_text='영업이익증가율')),
                ('operating_income', models.DecimalField(decimal_places=2, help_text='영업이익', max_digits=19)),
                ('operating_income_to_sales_ratio', models.FloatField(help_text='매출액영업이익률')),
                ('ordinary_profit_to_sales_ratio', models.FloatField(help_text='매출액경상이익률')),
                ('interest_coverage_ratio', models.FloatField(help_text='이자보상비율')),
                ('closing_account_date', models.PositiveIntegerField(help_text='결산년월 yyyyMM')),
                ('quarter_bookvalue_per_share', models.BigIntegerField(help_text='분기BPS. 분기주당순자산')),
                ('quarter_revenue_growth_ratio', models.FloatField(help_text='분기매출액증가율')),
                ('quarter_operating_income_growth_ratio', models.FloatField(help_text='분기영업이익증가율')),
                ('quarter_ordinary_profit_growth_ratio', models.FloatField(help_text='분기경상이익증가율')),
                ('quarter_net_profit_growth_ratio', models.FloatField(help_text='분기순이익증가율')),
                ('quarter_sales', models.DecimalField(decimal_places=2, help_text='분기매출액. 단위: 백만', max_digits=19)),
                ('quarter_operating_income', models.DecimalField(decimal_places=2, help_text='분기영업이익. 단위: 원', max_digits=19)),
                ('quarter_ordinary_profit', models.DecimalField(decimal_places=2, help_text='분기경상이익. 단위: 원', max_digits=19)),
                ('quarter_net_profit', models.DecimalField(decimal_places=2, help_text='분기당기순이익. 단위: 원', max_digits=19)),
                ('quarter_operating_income_to_sales_ratio', models.FloatField(help_text='분기매출액영업이익률')),
                ('quarter_ordinary_profit_to_sales_ratio', models.FloatField(help_text='분기매출액경상이익률')),
                ('quarter_return_on_equity', models.FloatField(help_text='분기 ROE. 자기자본순이익률')),
                ('quarter_interest_coverage_ratio', models.FloatField(help_text='분기이자보상비율')),
                ('quarter_reserve_ratio', models.FloatField(help_text='분기유보율')),
                ('quarter_debr_ration', models.FloatField(help_text='분기부채비율')),
                ('last_quarter_yyyymm', models.PositiveIntegerField(help_text='최근분기년월 yyyyMM')),
                ('basis', models.FloatField(help_text='BASIS')),
                ('local_date_yyyymmdd', models.PositiveIntegerField(help_text='현지날짜 yyyyMMdd')),
                ('nation', models.TextField(help_text='해외지수국가명')),
                ('elw_theoretical_value', models.DecimalField(decimal_places=2, help_text='ELW 이론가', max_digits=19)),
                ('program_net_bid', models.BigIntegerField(help_text='프로그램 순 매수')),
                ('today_foregier_net_bid_porvisional_yesno', models.IntegerField(choices=[(1, '해당없음'), (2, '확정'), (3, '잠정')], help_text='당일외국인순매수잠정구분')),
                ('today_foregier_net_bid', models.BigIntegerField(help_text='당일 외국인 순매수')),
                ('today_institution_net_bid_porvisional_yesno', models.IntegerField(choices=[(1, '해당없음'), (2, '확정'), (3, '잠정')], help_text='당일기관순매수잠정구분')),
                ('today_institution_net_bid', models.BigIntegerField(help_text='당일 기관 순매수')),
                ('previous_foregier_net_bid', models.BigIntegerField(help_text='전일 외국인 순매수')),
                ('previous_institution_net_bid', models.BigIntegerField(help_text='전일 기관 순매수')),
                ('sales_per_share', models.DecimalField(decimal_places=2, help_text='SPS', max_digits=19)),
                ('cash_flow_per_share', models.DecimalField(decimal_places=2, help_text='CFPS', max_digits=19)),
                ('earning_before_interest_tax_depreciation_amortization', models.DecimalField(decimal_places=2, help_text='EVITDA', max_digits=19)),
                ('credit_balance_ratio', models.FloatField(help_text='신용잔고율')),
                ('short_selling_quantity', models.BigIntegerField(help_text='공매도수량')),
                ('short_selling_date', models.BigIntegerField(help_text='공매도일자')),
                ('index_futures_previous_unpaid_agreement', models.BigIntegerField(help_text='지수/주식선물 전일미결제약정')),
                ('beta', models.FloatField(help_text='베타계수')),
                ('fiftynine_close_sum', models.DecimalField(decimal_places=2, help_text='59일 종가 합', max_digits=19)),
                ('oneonenine_close_sum', models.DecimalField(decimal_places=2, help_text='119일 종가 합', max_digits=19)),
                ('today_retail_net_bid_porvisional_yesno', models.IntegerField(choices=[(1, '해당없음'), (2, '확정'), (3, '잠정')], help_text='당일 개인 순매수 잠정구분')),
                ('today_retail_net_bid', models.BigIntegerField(help_text='당일 개인 순매수')),
                ('previous_retail_net_bid', models.BigIntegerField(help_text='전일 개인 순매수')),
                ('five_previous_close_price', models.DecimalField(decimal_places=2, help_text='5일 전 종가', max_digits=19)),
                ('ten_previous_close_price', models.DecimalField(decimal_places=2, help_text='10일 전 종가', max_digits=19)),
                ('twenty_previous_close_price', models.DecimalField(decimal_places=2, help_text='20일 전 종가', max_digits=19)),
                ('sixty_previous_close_price', models.DecimalField(decimal_places=2, help_text='60일 전 종가', max_digits=19)),
                ('onehundredtwenty_previous_close_price', models.DecimalField(decimal_places=2, help_text='120일 전 종가', max_digits=19)),
                ('estimated_static_vi_activation_base_price', models.DecimalField(decimal_places=2, help_text='정적 VI 발동 예상 기준가', max_digits=19)),
                ('estimated_static_vi_activation_rising_price', models.DecimalField(decimal_places=2, help_text='정적 VI 발동 예상 상승가', max_digits=19)),
                ('estimated_static_vi_activation_falling_price', models.DecimalField(decimal_places=2, help_text='정적 VI 발동 예상 하락가', max_digits=19)),
                ('data_date', models.DateField(auto_now_add=True, help_text='입력 날짜')),
            ],
            options={
                'db_table': 'stocks_detail_info',
            },
        ),
        migrations.CreateModel(
            name='Dividend',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('corp_code', models.CharField(help_text='DART 고유번호', max_length=9)),
                ('term_name', models.CharField(help_text='기간명', max_length=10)),
                ('account_name', models.CharField(help_text='계정명', max_length=50)),
                ('value', models.DecimalField(decimal_places=2, help_text='값', max_digits=21, null=True)),
            ],
            options={
                'db_table': 'dividend',
            },
        ),
        migrations.CreateModel(
            name='Executives',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('corp_code', models.CharField(help_text='DART 고유번호', max_length=9)),
                ('term_name', models.CharField(help_text='기간명', max_length=10)),
                ('worker_name', models.CharField(help_text='임원 이름', max_length=20)),
                ('worker_position', models.CharField(help_text='직책', max_length=30, null=True)),
                ('worker_birth_date', models.CharField(help_text='생년월일', max_length=10, null=True)),
            ],
            options={
                'db_table': 'executives',
            },
        ),
        migrations.CreateModel(
            name='ExecutiveWage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('corp_code', models.CharField(help_text='DART 고유번호', max_length=9)),
                ('term_name', models.CharField(help_text='기간명', max_length=10)),
                ('worker_name', models.CharField(help_text='임원 이름', max_length=20)),
                ('worker_position', models.CharField(help_text='직책', max_length=30, null=True)),
                ('wage', models.DecimalField(decimal_places=2, help_text='보수액', max_digits=21)),
            ],
            options={
                'db_table': 'executive_wage',
            },
        ),
        migrations.CreateModel(
            name='FinancialStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('corp_code', models.CharField(help_text='DART 고유번호', max_length=9)),
                ('business_year', models.CharField(help_text='사업년도', max_length=5)),
                ('business_month', models.CharField(help_text='사업월', max_length=5)),
                ('this_term_name', models.CharField(help_text='당기 명', max_length=100)),
                ('subject_name', models.CharField(help_text='재무제표명', max_length=10)),
                ('account_id', models.CharField(help_text='계정 ID', max_length=500)),
                ('account_name', models.CharField(help_text='계정명', max_length=100)),
                ('account_level', models.IntegerField(help_text='LV')),
                ('this_term_amount', models.DecimalField(decimal_places=2, help_text='당기 금액', max_digits=21)),
                ('ordering', models.IntegerField(help_text='계정과목 정렬순서')),
            ],
            options={
                'db_table': 'stock_financial_statement',
            },
        ),
        migrations.CreateModel(
            name='HistoricData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('close_price', models.DecimalField(decimal_places=2, help_text='종가', max_digits=19)),
                ('open_price', models.DecimalField(decimal_places=2, help_text='시가', max_digits=19)),
                ('high_price', models.DecimalField(decimal_places=2, help_text='고가', max_digits=19)),
                ('low_price', models.DecimalField(decimal_places=2, help_text='저가', max_digits=19)),
                ('transaction_volume', models.BigIntegerField(help_text='거래량')),
                ('date', models.DateField(help_text='날짜')),
            ],
            options={
                'db_table': 'stocks_historic_data',
            },
        ),
        migrations.CreateModel(
            name='MentionCounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('corp_code', models.CharField(help_text='DART 고유번호', max_length=9)),
                ('term_type', models.CharField(choices=[('d', '일'), ('w', '주'), ('m', '월'), ('q', '분기'), ('h', '반기')], default='d', help_text='집계 기간 단위 : d(일), w(주), m(월), q(분기), h(반기)', max_length=10)),
                ('term_start', models.CharField(help_text='기간 시작일', max_length=10)),
                ('term_end', models.CharField(help_text='기간 종료일', max_length=10)),
                ('community_count', models.IntegerField(help_text='커뮤니티 언급량')),
                ('insta_count', models.IntegerField(help_text='인스타 언급량')),
                ('blog_count', models.IntegerField(help_text='블로그 언급량')),
                ('news_count', models.IntegerField(help_text='뉴스 언급량')),
                ('twitter_count', models.IntegerField(help_text='트위터 언급량')),
                ('count_sum', models.IntegerField(help_text='언급량 합')),
            ],
            options={
                'db_table': 'stock_mention_counts',
            },
        ),
        migrations.CreateModel(
            name='news_reactions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('stock_name', models.CharField(help_text='종목명', max_length=20)),
                ('title', models.CharField(help_text='제목', max_length=100)),
                ('link', models.TextField(help_text='뉴스 링크 url')),
                ('press', models.CharField(help_text='언론사', max_length=20, null=True)),
                ('source', models.CharField(help_text='소스 사이트', max_length=20)),
                ('date', models.DateField(help_text='작성일')),
                ('emotion_count', models.IntegerField(help_text='감정 반응 개수', null=True)),
                ('comment_count', models.IntegerField(help_text='댓글 개수', null=True)),
                ('emotion_like_cnt', models.IntegerField(help_text='감정 반응 좋아요 개수', null=True)),
                ('emotion_warm_cnt', models.IntegerField(help_text='감정 반응 훈훈해요 개수', null=True)),
                ('emotion_sad_cnt', models.IntegerField(help_text='감정 반응 슬퍼요 개수', null=True)),
                ('emotion_angry_cnt', models.IntegerField(help_text='감정 반응 화나요 개수', null=True)),
                ('emotion_want_cnt', models.IntegerField(help_text='감정 반응 후속기사 원해요 개수', null=True)),
                ('emotion_recommend_cnt', models.IntegerField(help_text='감정 반응 추천해요', null=True)),
            ],
            options={
                'db_table': 'news_reactions',
            },
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('attractive', models.FloatField(help_text='배당 매력')),
                ('growth', models.FloatField(help_text='성장성')),
                ('stability', models.FloatField(help_text='재무 안정성')),
                ('cash_generate', models.FloatField(help_text='현금 창출력')),
                ('monopoly', models.FloatField(help_text='독점력')),
                ('recommendation_value', models.IntegerField(help_text='추천 점수')),
                ('data_date', models.DateField(auto_now_add=True, help_text='데이터 날짜')),
            ],
            options={
                'db_table': 'stocks_parameter',
            },
        ),
        migrations.CreateModel(
            name='PosNegWords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('corp_code', models.CharField(help_text='DART 고유번호', max_length=9)),
                ('term_type', models.CharField(choices=[('d', '일'), ('w', '주'), ('m', '월'), ('q', '분기'), ('h', '반기')], default='d', help_text='집계 기간 단위 : d(일), w(주), m(월), q(분기), h(반기)', max_length=10)),
                ('term_start', models.CharField(help_text='기간 시작일', max_length=10)),
                ('term_end', models.CharField(help_text='기간 종료일', max_length=10)),
                ('word', models.CharField(help_text='단어', max_length=50)),
                ('word_count', models.IntegerField(help_text='단어 수')),
                ('rank', models.IntegerField(help_text='단어 수 순위')),
                ('pos_neg', models.CharField(choices=[('pos', '긍정'), ('neg', '부정'), ('neu', '중립')], default='neu', help_text='긍/부정 : pos(긍정), neg(부정), neu(중립)', max_length=10)),
                ('property', models.CharField(help_text='속성', max_length=100)),
            ],
            options={
                'db_table': 'stock_pos_neg_words',
            },
        ),
        migrations.CreateModel(
            name='ReportSummary',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('stock_name', models.CharField(help_text='종목명', max_length=20)),
                ('code', models.CharField(help_text='종목코드', max_length=7)),
                ('title', models.CharField(help_text='제목', max_length=100)),
                ('summary', models.CharField(help_text='요약', max_length=500)),
                ('decision', models.CharField(help_text='매각/매수', max_length=15)),
                ('target_price', models.IntegerField(help_text='목표 주가', null=True)),
                ('current_price', models.IntegerField(help_text='전일 종가', null=True)),
                ('link', models.TextField(help_text='보고서 링크 url', null=True)),
                ('fin_corp', models.CharField(help_text='증권사', max_length=20)),
                ('writer', models.CharField(help_text='작성자', max_length=20)),
                ('date', models.DateField(help_text='작성일')),
            ],
            options={
                'db_table': 'report_summary',
            },
        ),
        migrations.CreateModel(
            name='SectorStatement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('sector_name', models.CharField(help_text='섹터명', max_length=50)),
                ('date', models.DateField(help_text='일자')),
                ('account_name', models.CharField(help_text='계정명', max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, help_text='데이터 값', max_digits=21)),
            ],
            options={
                'db_table': 'stock_sector_statement',
            },
        ),
        migrations.CreateModel(
            name='ServiceConnectionWords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('term_type', models.CharField(choices=[('d', '일'), ('w', '주'), ('m', '월'), ('q', '분기'), ('h', '반기'), ('f', '임의의 기간')], default='d', help_text='집계 기간 단위 : d(일), w(주), m(월), q(분기), h(반기), f(임의의 기간)', max_length=10)),
                ('term_start', models.CharField(help_text='기간 시작일', max_length=10)),
                ('term_end', models.CharField(help_text='기간 종료일', max_length=10)),
                ('word', models.CharField(help_text='단어', max_length=50)),
                ('word_count', models.IntegerField(help_text='단어 수')),
                ('rank', models.IntegerField(help_text='단어 수 순위')),
                ('category1', models.CharField(help_text='카테고리(대분류)', max_length=100)),
                ('category2', models.CharField(help_text='카테고리(소분류)', max_length=100)),
            ],
            options={
                'db_table': 'service_connection_words',
            },
        ),
        migrations.CreateModel(
            name='ServiceMentionCounts',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('term_type', models.CharField(choices=[('d', '일'), ('w', '주'), ('m', '월'), ('q', '분기'), ('h', '반기'), ('f', '임의의 기간')], default='d', help_text='집계 기간 단위 : d(일), w(주), m(월), q(분기), h(반기), f(임의의 기간)', max_length=10)),
                ('term_start', models.CharField(help_text='기간 시작일', max_length=10)),
                ('term_end', models.CharField(help_text='기간 종료일', max_length=10)),
                ('community_count', models.IntegerField(help_text='커뮤니티 언급량')),
                ('insta_count', models.IntegerField(help_text='인스타 언급량')),
                ('blog_count', models.IntegerField(help_text='블로그 언급량')),
                ('news_count', models.IntegerField(help_text='뉴스 언급량')),
                ('twitter_count', models.IntegerField(help_text='트위터 언급량')),
                ('count_sum', models.IntegerField(help_text='언급량 합')),
            ],
            options={
                'db_table': 'service_mention_counts',
            },
        ),
        migrations.CreateModel(
            name='ServicePosNegWords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('term_type', models.CharField(choices=[('d', '일'), ('w', '주'), ('m', '월'), ('q', '분기'), ('h', '반기'), ('f', '임의의 기간')], default='d', help_text='집계 기간 단위 : d(일), w(주), m(월), q(분기), h(반기), f(임의의 기간)', max_length=10)),
                ('term_start', models.CharField(help_text='기간 시작일', max_length=10)),
                ('term_end', models.CharField(help_text='기간 종료일', max_length=10)),
                ('word', models.CharField(help_text='단어', max_length=50)),
                ('word_count', models.IntegerField(help_text='단어 수')),
                ('rank', models.IntegerField(help_text='단어 수 순위')),
                ('pos_neg', models.CharField(choices=[('pos', '긍정'), ('neg', '부정'), ('neu', '중립')], default='neu', help_text='긍/부정 : pos(긍정), neg(부정), neu(중립)', max_length=10)),
                ('property', models.CharField(help_text='속성', max_length=100)),
            ],
            options={
                'db_table': 'service_pos_neg_words',
            },
        ),
        migrations.CreateModel(
            name='Shareholder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('corp_code', models.CharField(help_text='DART 고유번호', max_length=9)),
                ('term_name', models.CharField(help_text='기간', max_length=10)),
                ('shareholder', models.CharField(help_text='주주', max_length=50)),
                ('share_per', models.DecimalField(decimal_places=2, help_text='지분', max_digits=21, null=True)),
            ],
            options={
                'db_table': 'shareholder',
            },
        ),
        migrations.CreateModel(
            name='SocialKeywords',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('corp_code', models.CharField(help_text='DART 고유번호', max_length=9, null=True)),
                ('keyword', models.CharField(help_text='검색 키워드', max_length=50)),
                ('equal_keyword_list', models.CharField(blank=True, default='', help_text='동의어 목록', max_length=500)),
                ('or_include_keyword_list', models.CharField(blank=True, default='', help_text="'또는' 포함어 목록", max_length=500)),
                ('and_include_keyword_list', models.CharField(blank=True, default='', help_text="'그리고' 포함어 목록", max_length=500)),
                ('exclude_keyword_list', models.CharField(blank=True, default='', help_text='제외어 목록', max_length=500)),
                ('is_followed', models.BooleanField(default=True, help_text='지속적 수집 여부')),
            ],
            options={
                'db_table': 'social_keywords',
            },
        ),
        migrations.CreateModel(
            name='SocialSearchList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('term_start', models.CharField(help_text='기간 시작', max_length=10)),
                ('term_end', models.CharField(help_text='기간 종료', max_length=10)),
                ('completed', models.BooleanField(help_text='검색 완료')),
            ],
            options={
                'db_table': 'social_search_list',
            },
        ),
        migrations.CreateModel(
            name='StockNews',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('stock_name', models.CharField(help_text='종목명', max_length=20)),
                ('title', models.CharField(help_text='제목', max_length=100)),
                ('link', models.TextField(help_text='뉴스 링크 url')),
                ('source', models.CharField(help_text='소스 사이트', max_length=20)),
                ('date', models.DateField(help_text='작성일')),
            ],
            options={
                'db_table': 'stocks_news',
            },
        ),
        migrations.CreateModel(
            name='StockReports',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('stock_name', models.CharField(help_text='종목명', max_length=20)),
                ('stock_code', models.CharField(help_text='종목코드', max_length=6)),
                ('title', models.CharField(help_text='제목', max_length=100)),
                ('link', models.TextField(help_text='보고서 링크 url')),
                ('fin_corp', models.CharField(help_text='증권사', max_length=20)),
                ('date', models.DateField(help_text='작성일')),
            ],
            options={
                'db_table': 'stocks_reports',
            },
        ),
        migrations.CreateModel(
            name='WorkerCountAndPay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('corp_code', models.CharField(help_text='DART 고유번호', max_length=9)),
                ('term_name', models.CharField(help_text='기간명', max_length=10)),
                ('worker_category', models.CharField(help_text='종업원 카테고리', max_length=20)),
                ('worker_sex', models.CharField(help_text='종업원 성별', max_length=1)),
                ('item_name', models.CharField(help_text='항목명', max_length=50)),
                ('value', models.DecimalField(decimal_places=2, help_text='값', max_digits=21, null=True)),
                ('code', models.ForeignKey(help_text='종목코드', on_delete=django.db.models.deletion.PROTECT, related_name='worker_count_pay', to='stocks.basicinfo', to_field='code')),
            ],
            options={
                'db_table': 'worker_count_pay',
            },
        ),
        migrations.CreateModel(
            name='StocksSignal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='수정일시')),
                ('stock_name', models.CharField(help_text='종목명', max_length=300)),
                ('signal', models.TextField(help_text='특이사항')),
                ('date', models.DateField(help_text='날짜')),
                ('time', models.CharField(help_text='시간', max_length=10)),
                ('code', models.ForeignKey(help_text='종목코드', on_delete=django.db.models.deletion.PROTECT, related_name='signals', to='stocks.basicinfo', to_field='code')),
            ],
            options={
                'db_table': 'stocks_signal',
            },
        ),
        migrations.AddIndex(
            model_name='stockreports',
            index=models.Index(fields=['stock_name'], name='stocks_reports_name'),
        ),
        migrations.AddIndex(
            model_name='stockreports',
            index=models.Index(fields=['stock_code'], name='stocks_reports_code'),
        ),
        migrations.AddField(
            model_name='stocknews',
            name='code',
            field=models.ForeignKey(help_text='종목코드', on_delete=django.db.models.deletion.PROTECT, related_name='stock_news', to='stocks.basicinfo', to_field='code'),
        ),
        migrations.AddField(
            model_name='socialsearchlist',
            name='keyword',
            field=models.ForeignKey(help_text='키워드 id', on_delete=django.db.models.deletion.PROTECT, related_name='social_search_list', to='stocks.socialkeywords'),
        ),
        migrations.AddField(
            model_name='socialkeywords',
            name='code',
            field=models.ForeignKey(help_text='종목코드', null=True, on_delete=django.db.models.deletion.PROTECT, related_name='social_keywords', to='stocks.basicinfo', to_field='code'),
        ),
        migrations.AddField(
            model_name='shareholder',
            name='code',
            field=models.ForeignKey(help_text='종목코드', on_delete=django.db.models.deletion.PROTECT, related_name='shareholder', to='stocks.basicinfo', to_field='code'),
        ),
        migrations.AddField(
            model_name='serviceposnegwords',
            name='keyword',
            field=models.ForeignKey(help_text='검색 키워드', on_delete=django.db.models.deletion.PROTECT, to='stocks.socialkeywords'),
        ),
        migrations.AddField(
            model_name='servicementioncounts',
            name='keyword',
            field=models.ForeignKey(help_text='검색 키워드', on_delete=django.db.models.deletion.PROTECT, to='stocks.socialkeywords'),
        ),
        migrations.AddField(
            model_name='serviceconnectionwords',
            name='keyword',
            field=models.ForeignKey(help_text='검색 키워드', on_delete=django.db.models.deletion.PROTECT, to='stocks.socialkeywords'),
        ),
        migrations.AddIndex(
            model_name='sectorstatement',
            index=models.Index(fields=['sector_name'], name='sector_name_idx'),
        ),
        migrations.AddIndex(
            model_name='sectorstatement',
            index=models.Index(fields=['account_name'], name='sector_acc_idx'),
        ),
        migrations.AddIndex(
            model_name='sectorstatement',
            index=models.Index(fields=['sector_name', 'account_name'], name='sector_name_acc_idx'),
        ),
        migrations.AddIndex(
            model_name='reportsummary',
            index=models.Index(fields=['code'], name='report_summary_code'),
        ),
        migrations.AddField(
            model_name='posnegwords',
            name='code',
            field=models.ForeignKey(help_text='종목코드', on_delete=django.db.models.deletion.PROTECT, related_name='pos_neg_words', to='stocks.basicinfo', to_field='code'),
        ),
        migrations.AddField(
            model_name='parameter',
            name='code',
            field=models.ForeignKey(help_text='종목코드', on_delete=django.db.models.deletion.PROTECT, related_name='parameters', to='stocks.basicinfo', to_field='code'),
        ),
        migrations.AddField(
            model_name='news_reactions',
            name='code',
            field=models.ForeignKey(help_text='종목코드', on_delete=django.db.models.deletion.PROTECT, related_name='news_reactions', to='stocks.basicinfo', to_field='code'),
        ),
        migrations.AddField(
            model_name='mentioncounts',
            name='code',
            field=models.ForeignKey(help_text='종목코드', on_delete=django.db.models.deletion.PROTECT, related_name='mention_counts', to='stocks.basicinfo', to_field='code'),
        ),
        migrations.AddField(
            model_name='historicdata',
            name='code',
            field=models.ForeignKey(help_text='종목코드', on_delete=django.db.models.deletion.PROTECT, related_name='historic', to='stocks.basicinfo', to_field='code'),
        ),
        migrations.AddField(
            model_name='financialstatement',
            name='code',
            field=models.ForeignKey(help_text='종목코드', on_delete=django.db.models.deletion.PROTECT, related_name='fin_statement', to='stocks.basicinfo', to_field='code'),
        ),
        migrations.AddField(
            model_name='executivewage',
            name='code',
            field=models.ForeignKey(help_text='종목코드', on_delete=django.db.models.deletion.PROTECT, related_name='executive_wage', to='stocks.basicinfo', to_field='code'),
        ),
        migrations.AddField(
            model_name='executives',
            name='code',
            field=models.ForeignKey(help_text='종목코드', on_delete=django.db.models.deletion.PROTECT, related_name='executives', to='stocks.basicinfo', to_field='code'),
        ),
        migrations.AddField(
            model_name='dividend',
            name='code',
            field=models.ForeignKey(help_text='종목코드', on_delete=django.db.models.deletion.PROTECT, related_name='dividend', to='stocks.basicinfo', to_field='code'),
        ),
        migrations.AddField(
            model_name='detailinfo',
            name='code',
            field=models.ForeignKey(help_text='종목코드', on_delete=django.db.models.deletion.PROTECT, related_name='details', to='stocks.basicinfo', to_field='code'),
        ),
        migrations.AddField(
            model_name='consensus',
            name='code',
            field=models.ForeignKey(help_text='종목코드', on_delete=django.db.models.deletion.PROTECT, related_name='consensus', to='stocks.basicinfo', to_field='code'),
        ),
        migrations.AddField(
            model_name='connectionwords',
            name='code',
            field=models.ForeignKey(help_text='종목코드', on_delete=django.db.models.deletion.PROTECT, related_name='connection_words', to='stocks.basicinfo', to_field='code'),
        ),
        migrations.AddField(
            model_name='boardmembers',
            name='code',
            field=models.ForeignKey(help_text='종목코드', on_delete=django.db.models.deletion.PROTECT, related_name='board_members', to='stocks.basicinfo', to_field='code'),
        ),
        migrations.AddField(
            model_name='basicinfo',
            name='currency',
            field=models.ForeignKey(default=1, help_text='사용 통화', on_delete=django.db.models.deletion.PROTECT, to='common.currency'),
        ),
        migrations.AddField(
            model_name='basicinfo',
            name='market',
            field=models.ForeignKey(default=1, help_text='시장', on_delete=django.db.models.deletion.PROTECT, to='common.market'),
        ),
        migrations.AddField(
            model_name='afandsub',
            name='code',
            field=models.ForeignKey(help_text='종목코드', on_delete=django.db.models.deletion.PROTECT, related_name='af_and_sub', to='stocks.basicinfo', to_field='code'),
        ),
        migrations.AddIndex(
            model_name='workercountandpay',
            index=models.Index(fields=['corp_code'], name='worker_count_pay_corp_code_idx'),
        ),
        migrations.AddIndex(
            model_name='workercountandpay',
            index=models.Index(fields=['code'], name='worker_count_pay_code_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='workercountandpay',
            unique_together={('code', 'term_name', 'worker_category', 'worker_sex', 'item_name')},
        ),
        migrations.AddIndex(
            model_name='stockssignal',
            index=models.Index(fields=['-date', '-time'], name='stocks_signal_date_time_idx'),
        ),
        migrations.AddIndex(
            model_name='stocknews',
            index=models.Index(fields=['code'], name='stocks_news_code'),
        ),
        migrations.AlterUniqueTogether(
            name='socialkeywords',
            unique_together={('code', 'keyword', 'equal_keyword_list', 'or_include_keyword_list', 'and_include_keyword_list', 'exclude_keyword_list')},
        ),
        migrations.AddIndex(
            model_name='shareholder',
            index=models.Index(fields=['corp_code'], name='shareholder_corp_code_idx'),
        ),
        migrations.AddIndex(
            model_name='shareholder',
            index=models.Index(fields=['code'], name='shareholder_code_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='shareholder',
            unique_together={('code', 'term_name', 'shareholder')},
        ),
        migrations.AlterUniqueTogether(
            name='serviceposnegwords',
            unique_together={('keyword', 'term_type', 'term_start', 'term_end', 'word')},
        ),
        migrations.AlterUniqueTogether(
            name='servicementioncounts',
            unique_together={('keyword', 'term_type', 'term_start', 'term_end')},
        ),
        migrations.AlterUniqueTogether(
            name='serviceconnectionwords',
            unique_together={('keyword', 'term_type', 'term_start', 'term_end', 'word')},
        ),
        migrations.AddIndex(
            model_name='posnegwords',
            index=models.Index(fields=['corp_code'], name='pos_neg_words_corp_code_idx'),
        ),
        migrations.AddIndex(
            model_name='posnegwords',
            index=models.Index(fields=['term_type'], name='pos_neg_words_term_type_idx'),
        ),
        migrations.AddIndex(
            model_name='parameter',
            index=models.Index(fields=['-data_date'], name='stocks_parameters_date_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='parameter',
            unique_together={('code', 'data_date')},
        ),
        migrations.AddIndex(
            model_name='news_reactions',
            index=models.Index(fields=['code'], name='news_reactions_code'),
        ),
        migrations.AddIndex(
            model_name='mentioncounts',
            index=models.Index(fields=['corp_code'], name='mention_counts_corp_code_idx'),
        ),
        migrations.AddIndex(
            model_name='mentioncounts',
            index=models.Index(fields=['term_type'], name='mention_counts_term_type_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='historicdata',
            unique_together={('code', 'date')},
        ),
        migrations.AddIndex(
            model_name='financialstatement',
            index=models.Index(fields=['corp_code'], name='stock_fin_corp_code_idx'),
        ),
        migrations.AddIndex(
            model_name='financialstatement',
            index=models.Index(fields=['subject_name'], name='stock_fin_sub_name_idx'),
        ),
        migrations.AddIndex(
            model_name='financialstatement',
            index=models.Index(fields=['corp_code', 'subject_name', 'this_term_name'], name='stock_fin_corp_sub_term_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='financialstatement',
            unique_together={('code', 'this_term_name', 'subject_name', 'account_id')},
        ),
        migrations.AddIndex(
            model_name='executivewage',
            index=models.Index(fields=['corp_code'], name='executive_wage_corp_code_idx'),
        ),
        migrations.AddIndex(
            model_name='executivewage',
            index=models.Index(fields=['code'], name='executive_wage_code_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='executivewage',
            unique_together={('code', 'term_name', 'worker_name', 'worker_position')},
        ),
        migrations.AddIndex(
            model_name='executives',
            index=models.Index(fields=['corp_code'], name='executives_corp_code_idx'),
        ),
        migrations.AddIndex(
            model_name='executives',
            index=models.Index(fields=['code'], name='executives_code_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='executives',
            unique_together={('code', 'term_name', 'worker_name', 'worker_birth_date', 'worker_position')},
        ),
        migrations.AddIndex(
            model_name='dividend',
            index=models.Index(fields=['corp_code'], name='dividend_corp_code_idx'),
        ),
        migrations.AddIndex(
            model_name='dividend',
            index=models.Index(fields=['code'], name='dividend_code_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='dividend',
            unique_together={('code', 'term_name', 'account_name')},
        ),
        migrations.AlterUniqueTogether(
            name='detailinfo',
            unique_together={('code', 'data_date')},
        ),
        migrations.AddIndex(
            model_name='consensus',
            index=models.Index(fields=['corp_code'], name='consensus_corp_code_idx'),
        ),
        migrations.AddIndex(
            model_name='consensus',
            index=models.Index(fields=['code'], name='consensus_code_idx'),
        ),
        migrations.AddIndex(
            model_name='consensus',
            index=models.Index(fields=['code', 'fin_corp'], name='consensus_code_fin_corp_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='consensus',
            unique_together={('code', 'target_year', 'fin_corp', 'estimate_date', 'account_name')},
        ),
        migrations.AddIndex(
            model_name='connectionwords',
            index=models.Index(fields=['corp_code'], name='connection_words_corp_code_idx'),
        ),
        migrations.AddIndex(
            model_name='connectionwords',
            index=models.Index(fields=['term_type'], name='connection_words_term_type_idx'),
        ),
        migrations.AddIndex(
            model_name='boardmembers',
            index=models.Index(fields=['corp_code'], name='board_members_corp_code_idx'),
        ),
        migrations.AddIndex(
            model_name='boardmembers',
            index=models.Index(fields=['code'], name='board_members_code_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='boardmembers',
            unique_together={('code', 'term_name', 'member_name', 'member_birth_date', 'member_job', 'member_sex', 'member_status')},
        ),
        migrations.AddIndex(
            model_name='basicinfo',
            index=models.Index(fields=['name'], name='stocks_basic_info_name_idx'),
        ),
        migrations.AddIndex(
            model_name='afandsub',
            index=models.Index(fields=['corp_code'], name='af_and_sub_corp_code_idx'),
        ),
        migrations.AddIndex(
            model_name='afandsub',
            index=models.Index(fields=['code'], name='af_and_sub_code_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='afandsub',
            unique_together={('code', 'term_name', 'relative_stock_code', 'account_name')},
        ),
    ]
